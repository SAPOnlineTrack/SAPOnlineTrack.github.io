{"version":3,"sources":["webpack:///./src/components/AuthorThumbnail/AuthorThumbnail.js","webpack:///./src/components/PostListing/PostListing.js","webpack:///./src/templates/tag.jsx","webpack:///./src/components/MainContent/MainContent.js","webpack:///./src/components/PageTitle/PageTitle.js","webpack:///./src/components/PaginationLink/PaginationLink.js","webpack:///./src/components/Pagination/Pagination.js","webpack:///./src/components/PaginatedContent/PaginatedContent.js","webpack:///./src/components/PageDescription/PageDescription.js"],"names":["AuthorThumbnail","render","this","props","avatar","name","className","src","alt","data-pin-nopin","React","Component","PostListing","postEdges","authorEdges","postList","postAuthors","map","postEdge","path","node","fields","slug","tags","frontmatter","cover","title","date","author","AuthorModel","getAuthor","SiteConfig","blogAuthorId","excerpt","timeToRead","post","post_class","PostFormatting","key","PostHeader","to","image","AuthorLink","url","uid","PostTags","prefix","PostDate","TagTemplate","state","menuOpen","handleOnClick","evt","stopPropagation","closeMenu","openMenu","handleOnClose","setState","pageContext","tag","nodes","page","pages","total","limit","prev","next","authorsEdges","data","authors","edges","location","isOpen","config","siteTitle","onClose","featureImage","logo","siteLogo","navigation","siteNavigation","onClick","text","description","copyright","promoteGatsby","pageQuery","MainContent","children","classes","classNames","id","role","PageTitle","__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","PaginationLink","rest","style","Pagination","PaginatedContent","PageDescription"],"mappings":"gKAWeA,G,oGARXC,OAAA,WAAU,IAAD,EACoBC,KAAKC,MAAtBC,EADH,EACGA,OAAQC,EADX,EACWA,KAChB,OAAID,GAAUC,EACF,yBAAKC,UAAU,eAAeC,IAAKH,EAAQI,IAAKH,EAAMI,iBAAe,SAE1E,M,GANeC,IAAMC,Y,6FCmB9BC,G,oGACFX,OAAA,WACI,IAZaY,EAAWC,EAYlBC,GAZOF,EAYgBX,KAAKC,MAAMU,UAZhBC,EAY2BZ,KAAKC,MAAMa,YAZtBH,EAAUI,KAAI,SAAAC,GAAQ,MAAK,CACvEC,KAAMD,EAASE,KAAKC,OAAOC,KAC3BC,KAAML,EAASE,KAAKI,YAAYD,KAChCE,MAAOP,EAASE,KAAKI,YAAYC,MACjCC,MAAOR,EAASE,KAAKI,YAAYE,MACjCC,KAAMT,EAASE,KAAKI,YAAYG,KAChCC,OAAQC,IAAYC,UAAUhB,EAAaI,EAASE,KAAKI,YAAYI,OAAQG,IAAWC,cACxFC,QAASf,EAASE,KAAKa,QACvBC,WAAYhB,EAASE,KAAKc,gBAKtB,OAAQ,6BAEPnB,EAASE,KAAI,SAAAkB,GAAS,IACXT,EAA6CS,EAA7CT,MAAOP,EAAsCgB,EAAtChB,KAAMc,EAAgCE,EAAhCF,QAASL,EAAuBO,EAAvBP,OAAQL,EAAeY,EAAfZ,KAAMI,EAASQ,EAATR,KACtCrB,EAAY6B,EAAKC,WAAaD,EAAKC,WAAa,OACtD,OAAQ,kBAACC,EAAA,EAAD,CAAgB/B,UAAWA,EAAWgC,IAAKZ,GACjD,kBAACa,EAAA,EAAD,KACE,wBAAIjC,UAAU,cACZ,kBAAC,OAAD,CAAMkC,GAAIrB,GAAOO,KAGrB,6BAASpB,UAAU,gBAEjB,2BACG2B,EAAS,IACV,kBAAC,OAAD,CAAM3B,UAAU,YAAYkC,GAAIrB,GAAhC,OAKJ,4BAAQb,UAAU,aAChB,kBAAC,EAAD,CAAiBF,OAAQwB,EAAOa,MAAOpC,KAAMuB,EAAOvB,OACpD,kBAACqC,EAAA,EAAD,CAAYC,IAAG,WAAaf,EAAOgB,IAAOvC,KAAMuB,EAAOvB,OACvD,kBAACwC,EAAA,EAAD,CAAUC,OAAO,OAAOvB,KAAMA,IAC9B,kBAACwB,EAAA,EAAD,CAAUpB,KAAMA,W,GA3BNjB,IAAMC,YAkCjBC,O,uUCrCToC,E,oJACJC,MAAQ,CACNC,UAAU,G,EAGZC,cAAgB,SAAAC,GACdA,EAAIC,kBACA,EAAKJ,MAAMC,SACb,EAAKI,YAEL,EAAKC,Y,EAITC,cAAgB,SAAAJ,GACdA,EAAIC,kBACJ,EAAKC,a,EAGPC,SAAW,WACT,EAAKE,SAAS,CAAEP,UAAU,K,EAG5BI,UAAY,WACV,EAAKG,SAAS,CAAEP,UAAU,K,8BAG5BjD,OAAA,WAAU,IAAD,EAUHC,KAAKC,MAAMuD,YARbC,EAFK,EAELA,IACAC,EAHK,EAGLA,MACAC,EAJK,EAILA,KACAC,EALK,EAKLA,MACAC,EANK,EAMLA,MACAC,EAPK,EAOLA,MACAC,EARK,EAQLA,KACAC,EATK,EASLA,KAEIC,EAAejE,KAAKC,MAAMiE,KAAKC,QAAQC,MAC7C,OACE,kBAAC,IAAD,CAAQC,SAAUrE,KAAKC,MAAMoE,UAC3B,kBAAC,IAAD,CAAQC,OAAQtE,KAAK+C,MAAMC,UACzB,kBAAC,IAAD,CAAQxB,MAAK,oBAAsBiC,EAAtB,OAAgCc,IAAOC,YAGpD,kBAAC,IAAD,CAAYD,OAAQA,IAAQE,QAASzE,KAAKsD,gBAC1C,kBAAC,IAAD,KAEE,yBAAKlD,UAAU,gBAEb,kBAAC,IAAD,CAAYA,UAAU,WAAWmB,MAAOkC,EAAIiB,cAC1C,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAUC,KAAMJ,IAAOK,SAAUpD,MAAO+C,IAAOC,YAC/C,kBAAC,IAAD,CACEK,WAAYN,IAAOO,eACnBC,QAAS/E,KAAKiD,iBAGlB,yBAAK7C,UAAU,YACb,yBAAKA,UAAU,6BACb,kBAAC,IAAD,CAAW4E,KAAMvB,IACjB,kBAAC,IAAD,CACEuB,KAAMvB,EAAIwB,aAAJ,KAAwBpB,EAAxB,wBAMd,kBAAC,IAAD,CACEF,KAAMA,EACNC,MAAOA,EACPC,MAAOA,EACPC,MAAOA,EACPC,KAAMA,EACNC,KAAMA,GAGN,kBAAC,IAAD,CAAarD,UAAW+C,EAAO5C,YAAamD,MAIhD,kBAAC,IAAD,CACEiB,UAAWX,IAAOW,UAClBC,cAAeZ,IAAOY,oB,GAnFV3E,IAAMC,WA6FnB2E,EAAS,YAuCPtC,a,qGCnJTuC,G,oGACFtF,OAAA,WAAU,IACEuF,EAAatF,KAAKC,MAAlBqF,SACFC,EAAUC,IAAW,UAAWxF,KAAKC,MAAMG,WACjD,OAAQ,0BAAMqF,GAAG,UAAUrF,UAAWmF,EAASG,KAAK,QACnDJ,I,GALiB9E,IAAMC,YASjB4E,O,gFCVTM,G,oGACF5F,OAAA,WAAU,IACEiF,EAAShF,KAAKC,MAAd+E,KACR,OAAIA,EACO,wBAAI5E,UAAU,cAAc4E,GAEhC,M,GANSxE,IAAMC,YASfkF,O,8HCXXC,G,UAAkC,SAAUC,EAAGC,GAC/C,IAAIC,EAAI,GACR,IAAK,IAAIC,KAAKH,EAAOI,OAAOC,UAAUC,eAAeC,KAAKP,EAAGG,IAAMF,EAAEO,QAAQL,GAAK,IAC9ED,EAAEC,GAAKH,EAAEG,IACb,GAAS,MAALH,GAAqD,mBAAjCI,OAAOK,sBACtB,KAAIC,EAAI,EAAb,IAAgBP,EAAIC,OAAOK,sBAAsBT,GAAIU,EAAIP,EAAEQ,OAAQD,IAAST,EAAEO,QAAQL,EAAEO,IAAM,IAC1FR,EAAEC,EAAEO,IAAMV,EAAEG,EAAEO,KACtB,OAAOR,IA0BIU,E,0FApBX1G,OAAA,WACI,GAAIC,KAAKC,MAAMwC,IAAK,CAChB,IAAIrC,EAAY,WACZJ,KAAKC,MAAMG,YACXA,EAAeA,EAAN,IAAmBJ,KAAKC,MAAMG,WAI3C,IAAMsG,EAAOd,EAAO5F,KAAKC,MAAO,IAKhC,cAJOyG,EAAKC,aACLD,EAAKtG,iBACLsG,EAAK1B,YACL0B,EAAKjE,IACJ,kBAAC,OAAD,eAAMH,GAAItC,KAAKC,MAAMwC,KAASiE,EAA9B,CAAoCtG,UAAWA,IACxDJ,KAAKC,MAAM+E,MAGd,OAAO,M,GAlBcxE,IAAMC,WCGpBmG,G,oGAXX7G,OAAA,WAAU,IAAD,EAC+BC,KAAKC,MAAjC0D,EADH,EACGA,KAAMC,EADT,EACSA,MAAOG,EADhB,EACgBA,KAAMC,EADtB,EACsBA,KAC3B,OAAQ,yBAAK5D,UAAU,cACvB,kBAAC,EAAD,CAAgBA,UAAU,cAAcqC,IAAKsB,EAAMiB,KAAK,kBACxD,0BAAM5E,UAAU,eAAhB,QACQuD,EADR,OACkBC,GAElB,kBAAC,EAAD,CAAgBxD,UAAU,cAAcqC,IAAKuB,EAAMgB,KAAK,oB,GARvCxE,IAAMC,YCCzBoG,G,oGACF9G,OAAA,WAAU,IAAD,EACyCC,KAAKC,MAA3C0D,EADH,EACGA,KAAMC,EADT,EACSA,MAAOG,EADhB,EACgBA,KAAMC,EADtB,EACsBA,KAAMsB,EAD5B,EAC4BA,SAC7BlF,EAAY,GAIhB,OAHIuD,EAAO,IACPvD,GAAS,UAEL,kBAACiF,EAAA,EAAD,CAAajF,UAAWA,GAEhC,yBAAKA,UAAU,0BACb,kBAAC,EAAD,CAAYuD,KAAMA,EAAMC,MAAOA,EAAOG,KAAMA,EAAMC,KAAMA,KAGzDsB,EAGD,kBAAC,EAAD,CAAY3B,KAAMA,EAAMC,MAAOA,EAAOG,KAAMA,EAAMC,KAAMA,M,GAhBjCxD,IAAMC,YAoBtBoG,O,gFCtBTC,G,oGACF/G,OAAA,WAAU,IACEiF,EAAShF,KAAKC,MAAd+E,KACR,OAAIA,EACO,wBAAI5E,UAAU,oBAAoB4E,GAEtC,M,GANexE,IAAMC,YASrBqG","file":"component---src-templates-tag-jsx-56008805a723e03a9fce.js","sourcesContent":["import React from \"react\";\nimport \"./AuthorThumbnail.css\";\nclass AuthorThumbnail extends React.Component {\n    render() {\n        const { avatar, name } = this.props;\n        if (avatar && name) {\n            return (<img className=\"author-thumb\" src={avatar} alt={name} data-pin-nopin=\"true\"/>);\n        }\n        return null;\n    }\n}\nexport default AuthorThumbnail;\n","import React from \"react\";\nimport { Link } from \"gatsby\";\nimport AuthorThumbnail from \"../AuthorThumbnail/AuthorThumbnail\";\nimport PostTags from \"../PostTags/PostTags\";\nimport SiteConfig from \"../../../data/SiteConfig\";\nimport AuthorLink from \"../AuthorLink/AuthorLink\";\nimport PostFormatting from \"../../components/PostFormatting/PostFormatting\";\nimport PostHeader from \"../../components/PostHeader/PostHeader\";\nimport PostDate from \"../PostDate/PostDate\";\nimport AuthorModel from \"../../models/author-model\";\nimport \"./PostListing.css\";\nconst getPostList = (postEdges, authorEdges) => postEdges.map(postEdge => ({\n    path: postEdge.node.fields.slug,\n    tags: postEdge.node.frontmatter.tags,\n    cover: postEdge.node.frontmatter.cover,\n    title: postEdge.node.frontmatter.title,\n    date: postEdge.node.frontmatter.date,\n    author: AuthorModel.getAuthor(authorEdges, postEdge.node.frontmatter.author, SiteConfig.blogAuthorId),\n    excerpt: postEdge.node.excerpt,\n    timeToRead: postEdge.node.timeToRead\n}));\nclass PostListing extends React.Component {\n    render() {\n        const postList = getPostList(this.props.postEdges, this.props.postAuthors);\n        return (<div>\n        \n        {postList.map(post => {\n            const { title, path, excerpt, author, tags, date } = post;\n            const className = post.post_class ? post.post_class : \"post\";\n            return (<PostFormatting className={className} key={title}>\n              <PostHeader>\n                <h2 className=\"post-title\">\n                  <Link to={path}>{title}</Link>\n                </h2>\n              </PostHeader>\n              <section className=\"post-excerpt\">\n                \n                <p>\n                  {excerpt}{\" \"}\n                  <Link className=\"read-more\" to={path}>\n                    &raquo;\n                  </Link>\n                </p>\n              </section>\n              <footer className=\"post-meta\">\n                <AuthorThumbnail avatar={author.image} name={author.name}/>\n                <AuthorLink url={`/author/${author.uid}`} name={author.name}/>\n                <PostTags prefix=\" on \" tags={tags}/>\n                <PostDate date={date}/>\n              </footer>\n            </PostFormatting>);\n        })}\n      </div>);\n    }\n}\nexport default PostListing;\n","import { graphql } from \"gatsby\";\nimport React from \"react\";\nimport Helmet from \"react-helmet\";\nimport PostListing from \"../components/PostListing/PostListing\";\nimport config from \"../../data/SiteConfig\";\nimport Drawer from \"../components/Drawer/Drawer\";\nimport Navigation from \"../components/Navigation/Navigation\";\nimport SiteWrapper from \"../components/SiteWrapper/SiteWrapper\";\nimport MainHeader from \"../components/MainHeader/MainHeader\";\nimport MainNav from \"../components/MainNav/MainNav\";\nimport BlogLogo from \"../components/BlogLogo/BlogLogo\";\nimport MenuButton from \"../components/MenuButton/MenuButton\";\nimport PageTitle from \"../components/PageTitle/PageTitle\";\nimport PageDescription from \"../components/PageDescription/PageDescription\";\nimport Footer from \"../components/Footer/Footer\";\nimport PaginatedContent from \"../components/PaginatedContent/PaginatedContent\";\nimport Layout from \"../components/layout\";\n\nclass TagTemplate extends React.Component {\n  state = {\n    menuOpen: false\n  };\n\n  handleOnClick = evt => {\n    evt.stopPropagation();\n    if (this.state.menuOpen) {\n      this.closeMenu();\n    } else {\n      this.openMenu();\n    }\n  };\n\n  handleOnClose = evt => {\n    evt.stopPropagation();\n    this.closeMenu();\n  };\n\n  openMenu = () => {\n    this.setState({ menuOpen: true });\n  };\n\n  closeMenu = () => {\n    this.setState({ menuOpen: false });\n  };\n\n  render() {\n    const {\n      tag,\n      nodes,\n      page,\n      pages,\n      total,\n      limit,\n      prev,\n      next\n    } = this.props.pageContext;\n    const authorsEdges = this.props.data.authors.edges;\n    return (\n      <Layout location={this.props.location}>\n        <Drawer isOpen={this.state.menuOpen}>\n          <Helmet title={`Posts tagged as \"${tag}\" | ${config.siteTitle}`} />\n\n          {/* The blog navigation links */}\n          <Navigation config={config} onClose={this.handleOnClose} />\n          <SiteWrapper>\n            {/* All the main content gets inserted here */}\n            <div className=\"tag-template\">\n              {/* The big featured header */}\n              <MainHeader className=\"tag-head\" cover={tag.featureImage}>\n                <MainNav>\n                  <BlogLogo logo={config.siteLogo} title={config.siteTitle} />\n                  <MenuButton\n                    navigation={config.siteNavigation}\n                    onClick={this.handleOnClick}\n                  />\n                </MainNav>\n                <div className=\"vertical\">\n                  <div className=\"main-header-content inner\">\n                    <PageTitle text={tag} />\n                    <PageDescription\n                      text={tag.description || `A ${total}-post collection`}\n                    />\n                  </div>\n                </div>\n              </MainHeader>\n\n              <PaginatedContent\n                page={page}\n                pages={pages}\n                total={total}\n                limit={limit}\n                prev={prev}\n                next={next}\n              >\n                {/* PostListing component renders all the posts */}\n                <PostListing postEdges={nodes} postAuthors={authorsEdges} />\n              </PaginatedContent>\n            </div>\n            {/* The tiny footer at the very bottom */}\n            <Footer\n              copyright={config.copyright}\n              promoteGatsby={config.promoteGatsby}\n            />\n          </SiteWrapper>\n        </Drawer>\n      </Layout>\n    );\n  }\n}\n\n/* eslint no-undef: \"off\" */\nexport const pageQuery = graphql`\n  query TagPage($tag: String) {\n    allMarkdownRemark(\n      limit: 1000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { tags: { in: [$tag] } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          fields {\n            slug\n          }\n          excerpt\n          timeToRead\n          frontmatter {\n            title\n            tags\n            cover\n            date\n          }\n        }\n      }\n    }\n    # authors\n    authors: allAuthorsJson {\n      edges {\n        node {\n          uid\n          name\n          image\n          url\n          bio\n        }\n      }\n    }\n  }\n`;\n\nexport default TagTemplate;\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport \"./MainContent.css\";\nclass MainContent extends React.Component {\n    render() {\n        const { children } = this.props;\n        const classes = classNames(\"content\", this.props.className);\n        return (<main id=\"content\" className={classes} role=\"main\">\n        {children}\n      </main>);\n    }\n}\nexport default MainContent;\n","import React from \"react\";\nimport \"./PageTitle.css\";\nclass PageTitle extends React.Component {\n    render() {\n        const { text } = this.props;\n        if (text) {\n            return <h1 className=\"page-title\">{text}</h1>;\n        }\n        return null;\n    }\n}\nexport default PageTitle;\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\n            t[p[i]] = s[p[i]];\n    return t;\n};\nimport React from \"react\";\nimport { Link } from \"gatsby\";\nimport \"./PaginationLink.css\";\nclass PaginationLink extends React.Component {\n    render() {\n        if (this.props.url) {\n            let className = \"nav-link\";\n            if (this.props.className) {\n                className = `${className} ${this.props.className}`;\n            }\n            // Clone this.props and then delete Component specific\n            // props so we can spread the rest into the img.\n            const rest = __rest(this.props, []);\n            delete rest.style;\n            delete rest.className;\n            delete rest.text;\n            delete rest.url;\n            return (<Link to={this.props.url} {...rest} className={className}>\n          {this.props.text}\n        </Link>);\n        }\n        return null;\n    }\n}\nexport default PaginationLink;\n","import React from \"react\";\nimport PaginationLink from \"../PaginationLink/PaginationLink\";\nimport \"./Pagination.css\";\nclass Pagination extends React.Component {\n    render() {\n        const { page, pages, prev, next } = this.props;\n        return (<nav className=\"pagination\">\n        <PaginationLink className=\"newer-posts\" url={prev} text=\"← Newer Posts\"/>\n        <span className=\"page-number\">\n          Page {page} of {pages}\n        </span>\n        <PaginationLink className=\"older-posts\" url={next} text=\"Older Posts →\"/>\n      </nav>);\n    }\n}\nexport default Pagination;\n","import React from \"react\";\nimport MainContent from \"../MainContent/MainContent\";\nimport Pagination from \"../../components/Pagination/Pagination\";\nimport \"./PaginatedContent.css\";\nclass PaginatedContent extends React.Component {\n    render() {\n        const { page, pages, prev, next, children } = this.props;\n        let className = \"\";\n        if (page > 1) {\n            className = `${className} paged`;\n        }\n        return (<MainContent className={className}>\n        \n        <div className=\"extra-pagination inner\">\n          <Pagination page={page} pages={pages} prev={prev} next={next}/>\n        </div>\n\n        {children}\n\n        \n        <Pagination page={page} pages={pages} prev={prev} next={next}/>\n      </MainContent>);\n    }\n}\nexport default PaginatedContent;\n","import React from \"react\";\nimport \"./PageDescription.css\";\nclass PageDescription extends React.Component {\n    render() {\n        const { text } = this.props;\n        if (text) {\n            return <h2 className=\"page-description\">{text}</h2>;\n        }\n        return null;\n    }\n}\nexport default PageDescription;\n"],"sourceRoot":""}